Question1
ssh yanzich@greta-pt.ecs.vuw.ac.nz
//yanzich@greta-pt.ecs.vuw.ac.nz's password: 
//Last login: Mon Sep  2 22:22:51 2019 from 121.73.65.52
need comp302tools
psql -d Project1nice




CREATE TABLE BANKS(BankName TEXT NOT NULL,City TEXT NOT NULL,NoAccounts INTEGER DEFAULT 0 CONSTRAINT LIMITATION CHECK (NoAccounts>=0),Security TEXT CONSTRAINT SafetyLevel CHECK(Security IN('excellent', 'very good', 'good', 'weak')),CONSTRAINT BANKpk PRIMARY KEY(BankName,City));


CREATE TABLE Robberies(BankName TEXT NOT NULL,City TEXT NOT NULL,Date DATE NOT NULL,Amount DECIMAL(15,2) CONSTRAINT AmountLimit CHECK (Amount >0),CONSTRAINT ROBBERIESpk PRIMARY KEY(BankName, City, Date),CONSTRAINT ROBBERIESfk FOREIGN KEY(BankName,City) references Banks(BankName,City) ON DELETE  RESTRICT  ON UPDATE CASCADE);


CREATE TABLE Plans( BankName TEXT NOT NULL,City TEXT NOT NULL,NoRobbers INTEGER CONSTRAINT NoRobberLimit CHECK(NoRobbers >0),PlannedDate DATE NOT NULL,CONSTRAINT PLANpk PRIMARY KEY(BankName, City, PlannedDate),CONSTRAINT PLANfk FOREIGN KEY(BankName,City) references Banks(BankName,City) ON DELETE RESTRICT ON UPDATE CASCADE);


CREATE TABLE Robbers(RobberID SERIAL, NickName TEXT,Age INTEGER CONSTRAINT AgeLimit CHECK(Age >=0),NoYears INTEGER CONSTRAINT PrisonLimit CHECK(NoYears < Age AND NoYears >=0), primary key(RobberId) );


CREATE TABLE Skills( SkillId SERIAL,Description TEXT UNIQUE,PRIMARY KEY(SkillId) );


CREATE TABLE hasSkills(RobberId INTEGER NOT NULL,SkillId INTEGER NOT NULL,Preference INTEGER CONSTRAINT PreferenceLimit CHECK(Preference >0 AND Preference <=3 ),Grade CHAR(2) CONSTRAINT GradeLimit CHECK (Grade IN ('A+', 'A', 'A-', 'B+', 'B', 'B-', 'C+', 'C')),CONSTRAINT HASSKILLpk PRIMARY KEY (RobberId, SkillId),CONSTRAINT HASSKILLfkr FOREIGN KEY(RobberId) REFERENCES Robbers(RobberId) ON DELETE RESTRICT ON UPDATE RESTRICT,CONSTRAINT HASSKILLfks FOREIGN KEY(SkillID) REFERENCES Skills(SkillId) ON DELETE RESTRICT ON UPDATE RESTRICT);


CREATE TABLE hasAccounts(RobberId INTEGER NOT NULL,BankName TEXT NOT NULL,City TEXT NOT NULL,CONSTRAINT HASACCOUNTpk PRIMARY KEY(RobberId, BankName, City),CONSTRAINT HASACCOUNTfkb FOREIGN KEY (BankName,City) REFERENCES BANKS(BankName,City) ON UPDATE RESTRICT ON DELETE RESTRICT,CONSTRAINT HASACCOUNTfkr FOREIGN KEY (RobberId) REFERENCES Robbers(RobberId) ON  DELETE RESTRICT ON UPDATE CASCADE);


CREATE TABLE hasSkills(RobberId INTEGER,SkillId TEXT CONSTRAINT Sid REFERENCES Skills MATCH FULL ON DELETE CASCADE,Preference INTEGER,Grade        TEXT);


CREATE TABLE Accomplices( RobberId INTEGER NOT NULL,BankName TEXT NOT NULL,City TEXT NOT NULL,RobberyDate DATE NOT NULL,Share INTEGER CONSTRAINT shareLimit CHECK(Share >0),CONSTRAINT ACCOMPLICEpk PRIMARY KEY (RobberId, BankName, City, RobberyDate),CONSTRAINT ACCOMPLICEfkr FOREIGN KEY (RobberId) REFERENCES Robbers(RobberId) ON UPDATE CASCADE ON DELETE RESTRICT,CONSTRAINT ACCOMPLICEfkb FOREIGN KEY(BankName,City) REFERENCES Banks(BankName,City) ON UPDATE CASCADE ON DELETE RESTRICT);